@model Twitter.App.Models.ViewModels.TweetViewModel

<div class="panel panel-default" id ="@($"TweetPanel{@Model.Id}")">
    <div class="panel-heading">
        <span class="text-primary" id="tweet-author">@Model.Author.ToUpper()</span>
        <span class="text-muted" id="tweet-text-time">@Model.DatePosted</span>
    </div>
    <div class="panel-body" id="@($"TweetText{@Model.Id}")">
        <p class="tweet-text">@Model.Text</p>
    </div>
    <ul class="tweet-options">
        @*<li>
            @Ajax.ActionLink("Reply", "Reply", "Tweets",
                new {tweetId = @Model.Id},
                new AjaxOptions() {InsertionMode = InsertionMode.InsertAfter, UpdateTargetId = "TweetPanel" + @Model.Id})
        </li>*@
        <li><a data-toggle="collapse" href="#@($"ReplyPanel{@Model.Id}")" id="ReplyButton">Reply <span class="badge">@Model.RepliesCount</span></a></li>

        <li><a href="#">Retweet <span class="badge">@Model.RetweetsCount</span></a></li>

        <li>
            @Ajax.ActionLink("Like", "Favourite", "Tweets",
                new {tweetId = @Model.Id},
                new AjaxOptions() {InsertionMode = InsertionMode.Replace, UpdateTargetId = "Favourites" + @Model.Id})
            <span class="badge" id="@($"Favourites{@Model.Id}")">@Model.UsersFavouriteCount</span>
        </li>

        @if (User.Identity.Name == Model.Author)
        {
            <li>
                <span class="text-muted tweet-operation">
                   @Html.ActionLink("Edit", "Edit", "Tweets", new {tweetId = @Model.Id}, null)
                </span>
            </li>
            <li>
                <span class="text-muted tweet-operation">
                    @Ajax.ActionLink("Delete", "Delete", "Tweets",
                        new {tweetId = @Model.Id},
                        new AjaxOptions() {InsertionMode = InsertionMode.Replace, UpdateTargetId = "TweetPanel" + @Model.Id})
                </span>
            </li>
        }
    </ul>
    <ul class="tweet-reply">
        <li>
            @using (Ajax.BeginForm("Reply", "Tweets", new { tweetId = Model.Id }, new AjaxOptions() {  InsertionMode = InsertionMode.InsertAfter, UpdateTargetId = "ReplyPanel" + Model.Id}))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <div>
                    <input type="text" class="form-control" name="content" placeholder="Say something">
                </div>
            }
        </li>
    </ul>


    @*<form class="form-inline" role="form">
        <div class="form-group">
            <input type="text" class="form-control" id="Commentcontent" placeholder="Say something">
        </div>
        <button type="submit" class="btn btn-info">Comment</button>
    </form>*@

    <div id="@($"ReplyPanel{@Model.Id}")" class="panel-collapse collapse">
        <ul class="list-group">
            @if (Model.ReplyList != null)
            {
                foreach (var reply in Model.ReplyList.OrderBy(r => r.PublishTime))
                {
                    <li class="list-group-item">@reply.AuthorName: @reply.Content</li>
                }
            }
        </ul>
    </div>

</div>

@*<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="text-info">
                <a data-toggle="collapse" href="#@($"ReplyPanel{@Model.Id}")">Reply</a>
            </h4>
        </div>
        <div id="@($"ReplyPanel{@Model.Id}")" class="panel-collapse collapse">
            <ul class="list-group">
                @if (Model.ReplyList != null)
                {
                    foreach (var reply in Model.ReplyList.OrderBy(r => r.PublishTime))
                    {
                        <li class="list-group-item">@reply.AuthorName: @reply.Content on @reply.PublishTime</li>
                    }
                }
            </ul>
        </div>
    </div>
</div>*@