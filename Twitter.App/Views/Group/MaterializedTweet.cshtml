@using Twitter.App.Constants
@model Twitter.App.Models.ViewModels.TweetViewModel

<li>
    <div class="col s12 m8 offset-m2 l6 offset-l3 hoverable">
        <div class="card-panel grey lighten-5 z-depth-1" style="padding-top: 5px; margin-bottom: 0px">
            <div class="row valign-wrapper">
                <div class="groupTweetLeftPart">
                    <div style="max-width: 100px; float: left">
                        @if (Model.HasAvatarImage)
                        {
                            <img src="~/img/Uploads/Thumbnails/@Model.AvatarImageName" alt="" class="circle responsive-img">
                        }
                        else
                        {
                            <img src=@Constants.Based64UserAvatarImage alt="" class="circle responsive-img">
                        }
                    </div>
                </div>
                <div class="groupTweetRightPart">
                    <span class="black-text" style="font-size: 20px">
                        <a class="groupTweetAuthor" style="font-family: GillSans, Calibri, Trebuchet, sans-serif;">@Model.Author</a>
                        <br />
                        @Model.Text <br />
                    </span>
                </div>
            </div>
            <div class="card-action">
                <div>

                    <a class="btn tooltipped hide-on-small-only" data-position="top" data-delay="50" data-tooltip="Function in test" href="@Url.Action("GetTweet", "Tweets", new {tweetId = Model.Id})" style="font-size: 12px">
                        View More
                    </a>

                    <a style="float: right">@Model.DatePosted</a>
                </div>
            </div>
        </div>
        <div class="collection" style="margin: 0.08rem 0 0rem 0">
            @foreach (var reply in Model.ReplyList.OrderBy(r => r.PublishTime).Take(15))
            {
                <div>
                    <!-- Modal Trigger -->
                    <a href="#" class="collection-item" style="padding-bottom: 1.5px; padding-top: 5px; padding-left: 5px; padding-right: 3px">
                        <div class="groupTweetReplyAuthor" style="font-family: GillSans, Calibri, Trebuchet, sans-serif;">
                            <div class="chip" style="font-size: 16px; margin-right: 12px; background-color: #cce4e4">
                                @if (reply.HasAvatarImage)
                                {
                                    <img src="~/img/Uploads/Thumbnails/@reply.AvatarImageName" alt="Contact Person">
                                }
                                else
                                {
                                    <img src=@Constants.Based64UserAvatarImage alt="Contact Person">
                                }
                                
                                @reply.Author
                            </div> @reply.Text
                        </div>
                    </a>
                </div>
            }
            @using (Html.BeginForm("Reply", "Tweets", FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
            {
                @Html.AntiForgeryToken()

                <form class="col s12">
                    <div class="row" style="margin-bottom: 0px">
                        <div class="input-field col s12" style="margin-left: 10px">
                            <i class="material-icons prefix">mode_edit</i>
                            <input placeholder="What's on your mind ?" id="input_text" type="text" length="200" name="Text">
                            <input id="hidden_group_id_property" type="text" name="Id" value="@Model.Id" style="display: none !important;">
                            @*<label for="input_text">What's on your mind ?</label>*@
                        </div>
                        <input style="display: none !important;" type="submit" value="Post"/>
                    </div>
                </form>
            }
        </div>
    </div>
</li>
